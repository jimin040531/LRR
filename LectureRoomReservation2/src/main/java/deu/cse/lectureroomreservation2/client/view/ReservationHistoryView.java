/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package deu.cse.lectureroomreservation2.client.view;

import deu.cse.lectureroomreservation2.common.ReserveResult;
import deu.cse.lectureroomreservation2.server.control.ReserveManager;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Jimin
 */
public class ReservationHistoryView extends javax.swing.JFrame {

    /**
     * Creates new form ReservationHistoryView
     */
    public ReservationHistoryView() {
        initComponents();
        setLocationRelativeTo(null);
    }
    
    
    private List<String> readUserInfoFile() {
        List<String> lines = new ArrayList<>();
        try (BufferedReader br = new BufferedReader(new FileReader("src/main/resources/UserInfo.txt"))) {
            String line;
            while ((line = br.readLine()) != null) {
                lines.add(line);
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    return lines;
    }

    private String findUserRole(String userId) {
        try (BufferedReader br = new BufferedReader(new FileReader("src/main/resources/UserInfo.txt"))) {
            String line;
            while ((line = br.readLine()) != null) {
                String[] parts = line.split(",");
                if (parts.length >= 3 && parts[2].trim().equals(userId)) {
                    return parts[0].trim();  // "P" ÎòêÎäî "S"
                }
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
        return null;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        lblUserId = new javax.swing.JLabel();
        lblRoomSelect = new javax.swing.JLabel();
        lblDate = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        btnSearch = new javax.swing.JButton();
        txtUserId = new javax.swing.JTextField();
        cmbRoomSelect = new javax.swing.JComboBox<>();
        lblReservationTableTitle = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblReservationHistory = new javax.swing.JTable();
        btnEdit = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        txtDate = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblTitle.setFont(new java.awt.Font("ÎßëÏùÄ Í≥†Îîï", 1, 18)); // NOI18N
        lblTitle.setText("ÏòàÏïΩ ÎÇ¥Ïó≠ Ï°∞Ìöå");

        lblUserId.setText("ÏÇ¨Ïö©Ïûê ID :");

        lblRoomSelect.setText("Í∞ïÏùòÏã§ ÏÑ†ÌÉù :");

        lblDate.setText("ÎÇ†Ïßú ÏÑ†ÌÉù :");

        btnBack.setText("<");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnSearch.setText("üîç Í≤ÄÏÉâ");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        txtUserId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUserIdActionPerformed(evt);
            }
        });

        cmbRoomSelect.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ï†ÑÏ≤¥", "908", "911", "912", "913", "914", "915", "916", "918" }));
        cmbRoomSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbRoomSelectActionPerformed(evt);
            }
        });

        lblReservationTableTitle.setText("ÏòàÏïΩ ÎÇ¥Ïó≠");

        tblReservationHistory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ÏÇ¨Ïö©Ïûê ID", "Í∞ïÏùòÏã§", "ÎÖÑ", "Ïõî", "Ïùº", "ÏãúÏûë ÏãúÍ∞Ñ", "Ï¢ÖÎ£å ÏãúÍ∞Ñ", "ÏöîÏùº"
            }
        ));
        jScrollPane1.setViewportView(tblReservationHistory);
        if (tblReservationHistory.getColumnModel().getColumnCount() > 0) {
            tblReservationHistory.getColumnModel().getColumn(0).setPreferredWidth(80);
            tblReservationHistory.getColumnModel().getColumn(3).setPreferredWidth(40);
            tblReservationHistory.getColumnModel().getColumn(4).setPreferredWidth(40);
        }

        btnEdit.setText("‚úè ÏàòÏ†ï");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnDelete.setText("üóë ÏÇ≠Ï†ú");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 577, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblReservationTableTitle)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnBack)
                                .addGap(190, 190, 190)
                                .addComponent(lblTitle)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(lblUserId)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtUserId)
                        .addGap(12, 12, 12)
                        .addComponent(lblRoomSelect)
                        .addGap(8, 8, 8)
                        .addComponent(cmbRoomSelect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblDate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnSearch, javax.swing.GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE)
                            .addComponent(txtDate))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnBack)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblTitle)
                        .addGap(27, 27, 27)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblUserId)
                    .addComponent(txtUserId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDate)
                    .addComponent(lblRoomSelect)
                    .addComponent(cmbRoomSelect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSearch)
                .addGap(18, 18, 18)
                .addComponent(lblReservationTableTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEdit)
                    .addComponent(btnDelete))
                .addGap(12, 12, 12))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        new AdminMainView("A", null).setVisible(true);
        dispose();
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        String userId = txtUserId.getText().trim();
        String selectedRoom = cmbRoomSelect.getSelectedItem().toString();
        String room = selectedRoom.equals("Ï†ÑÏ≤¥") ? "" : selectedRoom.split(" ")[0];
        String date = txtDate.getText().trim(); // ex: "2025-06-03" ÌòïÏãù Í∂åÏû•

        DefaultTableModel model = (DefaultTableModel) tblReservationHistory.getModel();
        model.setRowCount(0); // Í∏∞Ï°¥ Îç∞Ïù¥ÌÑ∞ Ï¥àÍ∏∞Ìôî

        List<String[]> results = new ArrayList<>();

        // Ï†ÑÏ≤¥ ÏÇ¨Ïö©Ïûê ÌååÏùº ÌÉêÏÉâ
        List<String> lines = readUserInfoFile(); // UserInfo.txt ÏùΩÍ∏∞

        for (String line : lines) {
            String[] parts = line.split(",");
            if (parts.length < 4) continue;

            String id = parts[2].trim();
            if (!userId.isEmpty() && !id.equals(userId)) continue; // ÏÇ¨Ïö©Ïûê ID Ï°∞Í±¥

            for (int i = 4; i < parts.length; i++) {
                String r = parts[i].trim(); // Ïòà: 911 / 2025 / 06 / 03 / 09:00 10:00 / ÌôîÏöîÏùº
                String[] tokens = r.split("/");
                if (tokens.length < 6) continue;

                String roomNum = tokens[0].trim();
                String y = tokens[1].trim();
                String m = tokens[2].trim();
                String d = tokens[3].trim();
                String[] times = tokens[4].trim().split(" ");
                String day = tokens[5].trim();

                String fullDate = y + "-" + m + "-" + d;
                if (!room.isEmpty() && !room.equals(roomNum)) continue;
                if (!date.isEmpty() && !date.equals(fullDate)) continue;

                results.add(new String[] {
                    id, roomNum, y, m, d, times[0], times[1], day
                });
            }
        }

        for (String[] row : results) {
            model.addRow(row);
        }

        if (results.isEmpty()) {
            JOptionPane.showMessageDialog(this, "ÏùºÏπòÌïòÎäî ÏòàÏïΩ ÎÇ¥Ïó≠Ïù¥ ÏóÜÏäµÎãàÎã§.");
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void txtUserIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUserIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUserIdActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        // TODO add your handling code here:
        int row = tblReservationHistory.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(this, "ÏàòÏ†ïÌï† ÏòàÏïΩÏùÑ ÏÑ†ÌÉùÌï¥Ï£ºÏÑ∏Ïöî.");
            return;
        }

        // 1. Í∏∞Ï°¥ ÏòàÏïΩ Ï†ïÎ≥¥ Ï∂îÏ∂ú
        String userId = tblReservationHistory.getValueAt(row, 0).toString();
        String oldRoom = tblReservationHistory.getValueAt(row, 1).toString();
        String year = tblReservationHistory.getValueAt(row, 2).toString();
        String month = tblReservationHistory.getValueAt(row, 3).toString();
        String day = tblReservationHistory.getValueAt(row, 4).toString();
        String startTime = tblReservationHistory.getValueAt(row, 5).toString();
        String endTime = tblReservationHistory.getValueAt(row, 6).toString();
        String weekDay = tblReservationHistory.getValueAt(row, 7).toString();

        String oldDateStr = String.format("%s / %s / %s / %s %s", year, month, day, startTime, endTime);
        String oldReserveInfo = ReserveManager.makeReserveInfo(oldRoom, oldDateStr, weekDay);

        // 2. ÏÇ¨Ïö©Ïûê Ïó≠Ìï† ÌôïÏù∏
        String role = findUserRole(userId);  // ÏÇ¨Ïö©Ïûê Ïó≠Ìï† Ï°∞Ìöå Ìï®Ïàò (Ïòà: "S", "P")
        if (role == null) {
            JOptionPane.showMessageDialog(this, "ÏÇ¨Ïö©Ïûê Ïó≠Ìï†ÏùÑ Ï∞æÏùÑ Ïàò ÏóÜÏäµÎãàÎã§.");
            return;
        }

        // 3. ÏÉà ÏòàÏïΩ Ï†ïÎ≥¥ ÏûÖÎ†•
        String newRoom = JOptionPane.showInputDialog(this, "ÏÉà Í∞ïÏùòÏã§ Î≤àÌò∏ ÏûÖÎ†•:", oldRoom);
        String newDate = JOptionPane.showInputDialog(this, "ÏÉà ÎÇ†Ïßú Î∞è ÏãúÍ∞Ñ ÏûÖÎ†• (Ïòà: 2025 / 06 / 05 / 09:00 09:50):", oldDateStr);
        String newWeekday = JOptionPane.showInputDialog(this, "ÏÉà ÏöîÏùº ÏûÖÎ†•:", weekDay);

        if (newRoom == null || newDate == null || newWeekday == null) {
            JOptionPane.showMessageDialog(this, "ÏàòÏ†ïÏù¥ Ï∑®ÏÜåÎêòÏóàÏäµÎãàÎã§.");
            return;
        }

        // 4. ÏàòÏ†ï ÏöîÏ≤≠
        ReserveResult result = ReserveManager.updateReserve(userId, role, oldReserveInfo, newRoom, newDate, newWeekday);
        JOptionPane.showMessageDialog(this, result.getReason());

        // 5. ÏÑ±Í≥µ Ïãú ÌÖåÏù¥Î∏î ÏÉàÎ°úÍ≥†Ïπ®
        if (result.getResult()) {
            btnSearchActionPerformed(null);  // Í∏∞Ï°¥ Í≤ÄÏÉâ Ï°∞Í±¥ÏúºÎ°ú Îã§Ïãú Ï°∞Ìöå
        }
    }//GEN-LAST:event_btnEditActionPerformed

    private void cmbRoomSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbRoomSelectActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbRoomSelectActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int row = tblReservationHistory.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(this, "ÏÇ≠Ï†úÌï† ÏòàÏïΩÏùÑ ÏÑ†ÌÉùÌï¥Ï£ºÏÑ∏Ïöî.");
            return;
        }

        // JTableÏóêÏÑú ÏòàÏïΩ Ï†ïÎ≥¥ Ï∂îÏ∂ú
        String userId = tblReservationHistory.getValueAt(row, 0).toString();      // ÏÇ¨Ïö©Ïûê ID
        String room = tblReservationHistory.getValueAt(row, 1).toString();        // Í∞ïÏùòÏã§
        String year = tblReservationHistory.getValueAt(row, 2).toString();        // ÎÖÑ
        String month = tblReservationHistory.getValueAt(row, 3).toString();       // Ïõî
        String day = tblReservationHistory.getValueAt(row, 4).toString();         // Ïùº
        String startTime = tblReservationHistory.getValueAt(row, 5).toString();   // ÏãúÏûë ÏãúÍ∞Ñ
        String endTime = tblReservationHistory.getValueAt(row, 6).toString();     // Ï¢ÖÎ£å ÏãúÍ∞Ñ
        String weekDay = tblReservationHistory.getValueAt(row, 7).toString();     // ÏöîÏùº

        // ÏòàÏïΩ Ï†ïÎ≥¥ Ìè¨Îß∑ Ï°∞Ìï© ‚Üí ReserveManagerÏóêÏÑú ÏÇ¨Ïö©ÌïòÎäî ÌòïÏãùÍ≥º ÏùºÏπò
        String dateStr = String.format("%s / %s / %s / %s %s", year, month, day, startTime, endTime);
        String reserveInfo = ReserveManager.makeReserveInfo(room, dateStr, weekDay);

        // ÏòàÏïΩ Ï∑®ÏÜå ÏãúÎèÑ
        ReserveResult result = ReserveManager.cancelReserve(userId, reserveInfo);
        JOptionPane.showMessageDialog(this, result.getReason());

        // ÏÇ≠Ï†ú ÏÑ±Í≥µ Ïãú JTableÏóêÏÑú Ìï¥Îãπ Ìñâ ÏÇ≠Ï†ú
        if (result.getResult()) {
            // ÏÇ≠Ï†ú ÌõÑ ÌÖåÏù¥Î∏î Îã§Ïãú ÏÉàÎ°úÍ≥†Ïπ®
            btnSearchActionPerformed(null);
        }   
    }//GEN-LAST:event_btnDeleteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ReservationHistoryView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ReservationHistoryView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ReservationHistoryView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ReservationHistoryView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ReservationHistoryView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnSearch;
    private javax.swing.JComboBox<String> cmbRoomSelect;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblDate;
    private javax.swing.JLabel lblReservationTableTitle;
    private javax.swing.JLabel lblRoomSelect;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblUserId;
    private javax.swing.JTable tblReservationHistory;
    private javax.swing.JTextField txtDate;
    private javax.swing.JTextField txtUserId;
    // End of variables declaration//GEN-END:variables
}
